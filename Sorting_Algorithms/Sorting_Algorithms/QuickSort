//
//  main.c
//  Sorting_Algorithms
//
//  Created by Jaime Jonathan Ortiz Velazco on 02/03/24.
//

#include <stdio.h>

void swap(int *x, int *y){
    int temp;
    temp = *x;
    *x= *y;
    *y = temp;
}

int partition(int A[], int l, int h){
    int pivot = A[l];
    int i=l, j=h;
    
    do{
        do{i++;}while(A[i]<=pivot);
        while(A[j]>pivot){
            j--;
        };
        
        if(i<j){
            swap(&A[i], &A[j]);
        }
    }while(i<j);
    swap(&A[l], &A[j]);
    return j;
}

void quickSort(int A[], int l, int h ){
    if(l<h){
        int j = partition(A, l , h);
        quickSort(A, l, j);
        quickSort(A, j+1, h);
    }
}
int main(int argc, const char * argv[]) {
    int A[] = {11,13,7,12,16,9,24,5,10,3}, n = 11, i;
    quickSort(A,0,9);
    
    for(i = 0;i< n - 1; i++){
        printf("%d ",A[i]);
    }
}
